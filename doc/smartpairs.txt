*smartpairs.txt*  Fantastic selection improvement
*smartpairs*

Author:  Alex Gorkunov (alexander.gorkunov@gmail.com)
Github: http://github.com/gorkunov/smartpairs.vim

==============================================================================
CONTENTS                                                 *smartpairs-contents*

    1.Introduction............................|smartpairs-introduction|
    2.Shorcuts................................|smartpairs-mappings|
    3.Uber Mode...............................|smartpairs-uber-mode|
    4.Options.................................|smartpairs-options|
    5.License.................................|smartpairs-license|

==============================================================================
1. Introduction                                      *smartpairs-introduction*

Smartpairs allows you to forget about difficult keys combination 
like vi{ or va".

Now you can use only one shortcut for all typical combinations. 
Even if you've already selected something you can easily correct
selection by using smartpairs. 

Plugin searches first unpair symbol from the left of the current cursor
position and then runs source command with this symbol. When you press `v`
again plugin extend current selection to the next pairs.

==============================================================================
2. Mappings                                              *smartpairs-mappings*

By default smartpairs focuses on selection command but it also 
supports delete/change/yank.

Mappings list:

    vi* -> viv
    va* -> vav
    ci* -> civ
    ca* -> cav
    di* -> div
    da* -> dav
    ya* -> yiv
    ya* -> yav

    Where * is in <, >, ", ', `, (, ), [, ], {, } or t as tag
    
After `v*` commands you can press `v` again and selection will be extended to 
the next pairs.

==============================================================================
3. Uber Mode                                            *smartpairs-uber-mode*

Uber mode enables combination 'i' and 'a' modes. Let's see how it works:

We have a line (cursor position under _): >
    ( 'te_st' )
<
Without *uber mode* our keys combination converts to: >
    viv -> vi'
    v   -> vi(
<
With *uber mode*: >
    viv -> vi'
    v   -> va'
    v   -> vi(
    v   -> va(
<

To enable uber mode see |'smartpairs_uber_mode'|.

==============================================================================
4. Options                                                *smartpairs-options*

                                                            *'smartpairs_key'*
Default: 'v'
Key for running smartpairs in all modes (select/delete/change/yank) >
    let g:smartpairs_key = 'v'
<

                                                  *'smartpairs_nextpairs_key'*
Default: 'v'
Key for running smartpairs in the selection mode (extend current selection to
the next pairs) >
    let g:smartpairs_nextpairs_key = 'v'
<

                                                      *'smartpairs_uber_mode'*
Default: '1'
Enable uber-mode see |smartpairs-uber-mode| >
    let g:smartpairs_uber_mode = 1
<

                                                *'smartpairs_start_from_word'*
Default: '0'
Start selection from word. If there is no regions then select word. >
    let g:smartpairs_start_from_word = 1
<

                                                *'smartpairs_nextpairs_key_i'*
Default: 'm'
Key for running smartpairs in the selection mode for extending 
selection with IN-mod (like vi") >
    let g:smartpairs_nextpairs_key_i = 'm'
<

                                                *'smartpairs_nextpairs_key_a'*
Default: 'M'
Key for running smartpairs in the selection mode for extending 
selection with ABOVE-mod (like va") >
    let g:smartpairs_nextpairs_key_a = 'M'
<

                                                     *'smartpairs_revert_key'*
Default: '<C-V>'
Cancel last smartpairs selection >
    let g:smartpairs_revert_key = '<C-V>'
<
                                                       *'smartpairs_maxdepth'*
Default: 20
Smartpairs works only with 20 lines before cursor position
but you can changes this limit: >
    let g:smartpairs_maxdepth = 20
<

==============================================================================
5. License                                                *smartpairs-license*

Smartpairs is released under the wtfpl.
See http://sam.zoy.org/wtfpl/COPYING.

==============================================================================
